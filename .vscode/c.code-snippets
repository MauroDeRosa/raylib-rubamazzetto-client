{
    "Raylib Scene Header": {
		"prefix": "RaySceneHeader",
		"scope": "c",
		"body": [
			"#include \"SceneManager.h\"",
			"",
			"void ${TM_FILENAME_BASE:default}OnInit (void** _data);",
			"void ${TM_FILENAME_BASE:default}OnStart  (void** _data);",
			"void ${TM_FILENAME_BASE:default}OnUpdate (void** _data);",
			"void ${TM_FILENAME_BASE:default}OnRender (void** _data);",
			"void ${TM_FILENAME_BASE:default}OnExit (void** _data);",
			"",
			"DefineScene(${TM_FILENAME_BASE:default}, \"${TM_FILENAME_BASE:default}\", ${TM_FILENAME_BASE:default}OnInit, ${TM_FILENAME_BASE:default}OnStart, ${TM_FILENAME_BASE:default}OnUpdate, ${TM_FILENAME_BASE:default}OnRender, ${TM_FILENAME_BASE:default}OnExit);"
		],
		"description": "A Scene Header for my SceneManager"
	},
	"Raylib Scene Source": {
		"prefix": "RaySceneSource",
		"scope": "c",
		"body": [
			"#include <stdlib.h>",
			"#include \"SceneManager.h\"",
			"#include \"Scene/${TM_FILENAME_BASE:default}.h\"",
			"",
			"typedef struct",
			"{",
			"\tint example;",
			"} ${TM_FILENAME_BASE:default}Data;",
			"",
			"void ${TM_FILENAME_BASE:default}OnInit (void** _data)",
			"{",
			"\t*_data = malloc( sizeof(${TM_FILENAME_BASE:default}Data) );",
			"\n\t// dynamic allocation and modules initial configuration for the current scene here \n\t",
			"}",
			"",
			"void ${TM_FILENAME_BASE:default}OnStart (void** _data)",
			"{",
			"\t${TM_FILENAME_BASE:default}Data *data = *_data;",
			"\n\t// variables setup and initial state configuration here \n\t",
			"}",
			"",
			"void ${TM_FILENAME_BASE:default}OnUpdate (void** _data)",
			"{",
			"\t${TM_FILENAME_BASE:default}Data *data = *_data;",
			"\n\t// gets executed every frame, update scene state \n\t",
			"}",
			"",
			"void ${TM_FILENAME_BASE:default}OnRender (void** _data)",
			"{",
			"\t${TM_FILENAME_BASE:default}Data *data = *_data;",
			"\tClearBackground(RAYWHITE);",
			"\n\t// gets executed every frame, draw your privimitives, text and sprites \n\t",
			"}",
			"",
			"void ${TM_FILENAME_BASE:default}OnExit (void** _data)",
			"{",
			"\t${TM_FILENAME_BASE:default}Data *data = *_data;",
			"\n\t// free dynamically allocated memory and reset modules configuration to default here \n\t",
			"\tfree(data);",
			"}",
			"",
		],
		"description": "A Scene Source for my SceneManager"
	}
}