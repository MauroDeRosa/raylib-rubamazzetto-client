.TH "include/external/external/aes.c" 3 "Sun May 8 2022" "Ruba Mazzetto" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/external/external/aes.c
.SH SYNOPSIS
.br
.PP
\fC#include <string\&.h>\fP
.br
\fC#include 'aes\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBNb\fP   4"
.br
.ti -1c
.RI "#define \fBNk\fP   8"
.br
.ti -1c
.RI "#define \fBNr\fP   14"
.br
.ti -1c
.RI "#define \fBMULTIPLY_AS_A_FUNCTION\fP   0"
.br
.ti -1c
.RI "#define \fBgetSBoxValue\fP(num)   (sbox[(num)])"
.br
.ti -1c
.RI "#define \fBMultiply\fP(x,  y)"
.br
.ti -1c
.RI "#define \fBgetSBoxInvert\fP(num)   (rsbox[(num)])"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint8_t \fBstate_t\fP[4][4]"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBAES_init_ctx\fP (struct \fBAES_ctx\fP *ctx, const uint8_t *key)"
.br
.ti -1c
.RI "void \fBAES_init_ctx_iv\fP (struct \fBAES_ctx\fP *ctx, const uint8_t *key, const uint8_t *iv)"
.br
.ti -1c
.RI "void \fBAES_ctx_set_iv\fP (struct \fBAES_ctx\fP *ctx, const uint8_t *iv)"
.br
.ti -1c
.RI "void \fBAES_ECB_encrypt\fP (const struct \fBAES_ctx\fP *ctx, uint8_t *buf)"
.br
.ti -1c
.RI "void \fBAES_ECB_decrypt\fP (const struct \fBAES_ctx\fP *ctx, uint8_t *buf)"
.br
.ti -1c
.RI "void \fBAES_CBC_encrypt_buffer\fP (struct \fBAES_ctx\fP *ctx, uint8_t *buf, size_t length)"
.br
.ti -1c
.RI "void \fBAES_CBC_decrypt_buffer\fP (struct \fBAES_ctx\fP *ctx, uint8_t *buf, size_t length)"
.br
.ti -1c
.RI "void \fBAES_CTR_xcrypt_buffer\fP (struct \fBAES_ctx\fP *ctx, uint8_t *buf, size_t length)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define getSBoxInvert(num)   (rsbox[(num)])"

.SS "#define getSBoxValue(num)   (sbox[(num)])"

.SS "#define Multiply(x, y)"
\fBValue:\fP
.PP
.nf
      (  ((y & 1) * x) ^                              \
      ((y>>1 & 1) * xtime(x)) ^                       \
      ((y>>2 & 1) * xtime(xtime(x))) ^                \
      ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^         \
      ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))))   \
.fi
.SS "#define MULTIPLY_AS_A_FUNCTION   0"

.SS "#define Nb   4"

.SS "#define Nk   8"

.SS "#define Nr   14"

.SH "Typedef Documentation"
.PP 
.SS "typedef uint8_t state_t[4][4]"

.SH "Function Documentation"
.PP 
.SS "void AES_CBC_decrypt_buffer (struct \fBAES_ctx\fP * ctx, uint8_t * buf, size_t length)"

.SS "void AES_CBC_encrypt_buffer (struct \fBAES_ctx\fP * ctx, uint8_t * buf, size_t length)"

.SS "void AES_CTR_xcrypt_buffer (struct \fBAES_ctx\fP * ctx, uint8_t * buf, size_t length)"

.SS "void AES_ctx_set_iv (struct \fBAES_ctx\fP * ctx, const uint8_t * iv)"

.SS "void AES_ECB_decrypt (const struct \fBAES_ctx\fP * ctx, uint8_t * buf)"

.SS "void AES_ECB_encrypt (const struct \fBAES_ctx\fP * ctx, uint8_t * buf)"

.SS "void AES_init_ctx (struct \fBAES_ctx\fP * ctx, const uint8_t * key)"

.SS "void AES_init_ctx_iv (struct \fBAES_ctx\fP * ctx, const uint8_t * key, const uint8_t * iv)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Ruba Mazzetto from the source code\&.
