.TH "source/SceneManager.c" 3 "Fri May 6 2022" "Ruba Mazzetto" \" -*- nroff -*-
.ad l
.nh
.SH NAME
source/SceneManager.c
.SH SYNOPSIS
.br
.PP
\fC#include 'SceneManager\&.h'\fP
.br
\fC#include 'logger\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSCENE_MANAGER_PREFIX\fP   '[SceneManager] '"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBDefineScene\fP (SceneManagerInitialization, 'SceneManagerInitialization', NULL, NULL, NULL, NULL, NULL, NULL)"
.br
.ti -1c
.RI "bool \fBSceneManagerInit\fP (\fBScene\fP *startScene)"
.br
.ti -1c
.RI "void \fB_SceneManagerSceneInit\fP ()"
.br
.ti -1c
.RI "void \fBSceneManagerLoop\fP ()"
.br
.ti -1c
.RI "void \fB_SceneManagerNext\fP ()"
.br
.ti -1c
.RI "void \fB_SceneManagerClose\fP ()"
.br
.ti -1c
.RI "void \fBSceneManagerSetState\fP (\fBSceneManagerState\fP status)"
.br
.ti -1c
.RI "void \fBSceneManagerSetNext\fP (\fBScene\fP *nextScene)"
.br
.ti -1c
.RI "double \fBSceneManagerGetTime\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fB_SceneManagerStateString\fP [] = {'FALIURE\\0', 'SUCCESS\\0', 'NEXT\\0', 'CLOSE\\0'}"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define SCENE_MANAGER_PREFIX   '[SceneManager] '"

.SH "Function Documentation"
.PP 
.SS "void _SceneManagerClose ()"

.SS "void _SceneManagerNext ()"

.SS "void _SceneManagerSceneInit ()"

.SS "DefineScene (SceneManagerInitialization, 'SceneManagerInitialization', NULL, NULL, NULL, NULL, NULL, NULL)"

.SS "double SceneManagerGetTime ()"

.SS "bool SceneManagerInit (\fBScene\fP * startScene)"

.SS "void SceneManagerLoop ()"

.SS "void SceneManagerSetNext (\fBScene\fP * nextScene)"

.SS "void SceneManagerSetState (\fBSceneManagerState\fP status)"

.SH "Variable Documentation"
.PP 
.SS "const char* _SceneManagerStateString[] = {'FALIURE\\0', 'SUCCESS\\0', 'NEXT\\0', 'CLOSE\\0'}"

.SH "Author"
.PP 
Generated automatically by Doxygen for Ruba Mazzetto from the source code\&.
